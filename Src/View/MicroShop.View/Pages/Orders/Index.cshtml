@page
@using Microsoft.AspNetCore.Authentication;
@model MicroShop.View.Pages.Orders.IndexModel
@{
}

<h1>My Orders</h1>

@if (Model.Orders?.Data is not null)
{
    <table class="table table-hover table-bordered table-responsive">
        <thead>
            <tr>
                <th>Id</th>
                <th>Status</th>
                <th>Is Paid</th>
                <th>Date</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.Orders.Data)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Status.ToString()</td>
                    <td>@(order.IsPaid ? "Yes" : "No")</td>
                    <td>@order.CreatedAt</td>
                    <td>
                        <a asp-page="/Orders/Details"
                           asp-route-OrderId="@order.Id"
                           class="btn btn-outline-primary">
                            Details
                        </a>
                    </td>
                </tr>
            }
        </tbody>

    </table>

    @if (Model.Orders?.Pager is not null)
    {
        <partial name="_Pagination" for="Orders!.Pager"></partial>
    }
}
@section Scripts
{
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("Hubs/Orders/Updates")
            .configureLogging(signalR.LogLevel.Information)
        .build();

        async function start() {
            try {
                await connection.start();
                console.log("SignalR Connected.");
            } catch (err) {
                console.log(err);
                setTimeout(start, 5000);
            }
        };

        connection.on("Update", function (updateValue) {
            location.reload();
        });

        connection.onclose(async () => {
            await start();
        });

        // Start the connection.
        start();
    </script>
}